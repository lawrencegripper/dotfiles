# leave cmds starting with a space out of history
setopt HIST_IGNORE_SPACE
setopt interactive_comments

if [[ -a $HOME/.profile ]]
then
  source $HOME/.profile
fi

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# Setup env
{{- if eq (env "CODESPACES") "true" }}
# Skipped sshagent config in codespaces
# Setting up brew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
{{- else if eq .chezmoi.os "darwin" -}}
{{- else if and (eq .chezmoi.os "linux") }}
SSH_AUTH_SOCK=$HOME/.1password/agent.sock
{{- end }}

# initialize autocomplete here, otherwise functions won't be loaded
autoload -Uz compinit && compinit -u
{{/* What does this do? It iterestes over all the commands in auto_complete_commands.txt and if present on the path runs the autocompletion command associated */}}
{{- range include "auto_complete_commands.txt" | splitList "\n" }}
{{- if contains "#" . | not }}
{{- with $x := split "," . }}
if type "{{ $x._0 | trim }}" > /dev/null; then
  autoload -U is-at-least
  {{ $x._1 | trim }}
fi
{{ end }}
{{- end }}
{{- end }}

# Configure a scratch python venv 
if [[ ! -d ~/.scratch_venv ]]; then
  python3 -m venv ~/.scratch_venv
fi
alias scratch-venv="source ~/.scratch_venv/bin/activate"
# source ~/.scratch_venv/bin/activate > /dev/null

# Add aliases 
[ -f ~/.aliases ] && source ~/.aliases

# Enable z for jumping to commonly used folders
[ -f ~/.config/z/z.sh ] && source ~/.config/z/z.sh

# Configure fzf as fallback 
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# Configure atuin if it's installed
if type "atuin" > /dev/null; then
  {{- if eq (env "CODESPACES") "true" }}
    # Configures hostname and user for synced commands
    export ATUIN_HOST_NAME="codespace/$GITHUB_REPOSITORY"
    export ATUIN_HOST_USER=$GITHUB_USER
    if (curl -s -o /dev/null --max-time 2 "http://localhost:3123"); then
      atuin sync > /dev/null || (/workspaces/.atuin_login && atuin sync)
    else
      echo "Atuin sync server timed out";
    fi;
  {{- else }}
    if (curl -s -o /dev/null --max-time 2 "http://atuin-api.unicorn-tailor.ts.net"); then
      atuin status > /dev/null || ~/.config/atuin_login
    else
      echo "Atuin sync server timed out";
    fi;
  {{- end }}
  # Steal history ctrlR from fzf as we want atuin for that but to keep fzf for ctrl+t file search
  bindkey "^R" _atuin_search_widget
fi


# Configure auto-suggestions
if type "brew" > /dev/null; then
  if [ -f "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
    source "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
  fi
fi

# Zsh config
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD
setopt IGNORE_EOF

# Configure history
HISTFILE=~/.zsh_history
HISTSIZE=100000
SAVEHIST=100000
setopt HIST_VERIFY
setopt SHARE_HISTORY # share history between sessions ???
setopt EXTENDED_HISTORY # add timestamps to history
setopt APPEND_HISTORY # adds history
setopt INC_APPEND_HISTORY SHARE_HISTORY  # adds history incrementally and share it across sessions
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS