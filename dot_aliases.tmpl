alias reload!='. ~/.zshrc'

alias g=git
alias d='docker $*'
# grep case insensitive 
alias gri='grep -i $*'
# grep recursive
alias grr='grep -i -R $* .'

# copy to clipboard
alias clip='xclip -selection clipboard'

alias s="ssh"

alias k='kubectl'
alias h-create-ghcs='gh cs create --repo github/heaven -b master -m largePremiumLinux -s | xargs gh cs code -c'
alias h-open-ghcs='gh cs list --json "repository,name" -q ".[0].name" | xargs gh cs code -c'
alias h-ssh-ghcs='gh cs list --json "repository,name" -q ".[0].name" | xargs gh cs ssh -c'

# Update all the things
alias upd-linux='~/.dotfiles_bin/update-linux'

# load gh pat from 1pw
alias ghpat='. ~/.gh_pat'

# Ruby things
alias be='bundle exec $*'
alias bi='bundle install'
alias ci='scripts/cibuild'

alias code='code-insiders'

# Check if 'eza' command exists
if command -v eza &> /dev/null
then
    EZA_ARGS="--hyperlink --icons --git --octal-permissions --time-style=relative --mounts"
    alias ls="eza $EZA_ARGS"
    alias la="eza -lha $EZA_ARGS"
    alias lt="eza -lha --tree $EZA_ARGS"
    alias ld="eza -lha --tree --only-dirs $EZA_ARGS"
    alias lf="eza -lha --only-files $EZA_ARGS"
    alias lmod="eza -lha --sort=modified $EZA_ARGS"
fi

# Check if 'bat' command exists
if command -v bat &> /dev/null
then
    alias cat='bat'
fi

# Check if 'micro' command exists
if command -v micro &> /dev/null
then
    alias nano='micro'
fi

# Send a notification with wezterm use like `do think && weznot "think is done"`
function weznot() {
    title=$1
    printf "\033]1337;SetUserVar=%s=%s\007" wez_not $(echo -n "$title" | base64)
}

# Pipeline content to the clipboard `echo "hello" | wezcopy`
function wezcopy() {
    read clip_stuff
    printf "\033]1337;SetUserVar=%s=%s\007" wez_copy $(echo -n "$clip_stuff" | base64)
}

# Notify cmd result use like `wezmon do_thing`
function wezmon() {
    command=$*
    
    eval $command
    
    last_exit_code=$?
    if [ $last_exit_code -eq 0 ]; then
        weznot "✅ '$command' completed successfully"
    else
        weznot "❌ '$command' failed"
    fi
}